"use strict";function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}var getNewScore=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(){var jsonScores;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return window.fetch("/update");case 2:scoresRes=_context.sent;if(!scoresRes.ok){_context.next=10;break}_context.next=6;return scoresRes.json();case 6:jsonScores=_context.sent;return _context.abrupt("return",Promise.resolve(jsonScores));case 10:return _context.abrupt("return",Promise.reject());case 11:case"end":return _context.stop();}}},_callee)}));return function getNewScore(){return _ref.apply(this,arguments)}}();var updateScore=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(json){return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:document.getElementById("name1").innerHTML=json.firstTeam.name;document.getElementById("name2").innerHTML=json.secondTeam.name;document.getElementById("score1").innerHTML=json.firstTeam.score;document.getElementById("score2").innerHTML=json.secondTeam.score;document.getElementById("logo1").src="logos/"+json.firstTeam.logo;document.getElementById("logo2").src="logos/"+json.secondTeam.logo;case 6:case"end":return _context2.stop();}}},_callee2)}));return function updateScore(_x){return _ref2.apply(this,arguments)}}();window.setInterval(function(){return getNewScore().then(updateScore)},100);
